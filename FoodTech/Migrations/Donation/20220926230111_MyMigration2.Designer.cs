// <auto-generated />
using System;
using FoodTech.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FoodTech.Migrations.Donation
{
    [DbContext(typeof(DonationContext))]
    [Migration("20220926230111_MyMigration2")]
    partial class MyMigration2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("FoodTech.Models.ClientModel", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UsuarioModelId")
                        .HasColumnType("int");

                    b.HasKey("IdCliente");

                    b.HasIndex("UsuarioModelId");

                    b.ToTable("ClientModel");
                });

            modelBuilder.Entity("FoodTech.Models.ClientPjModel", b =>
                {
                    b.Property<int>("IdClientePj")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UsuarioModelId")
                        .HasColumnType("int");

                    b.HasKey("IdClientePj");

                    b.HasIndex("UsuarioModelId");

                    b.ToTable("ClientPjModel");
                });

            modelBuilder.Entity("FoodTech.Models.DeliverDonationModel", b =>
                {
                    b.Property<int>("IdDoacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Cep")
                        .HasColumnType("int");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ClientModelIdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("ClientPjModelIdClientePj")
                        .HasColumnType("int");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("FoiPago")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("QuantidadeDoacao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TipoDoacao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdDoacao");

                    b.HasIndex("ClientModelIdCliente");

                    b.HasIndex("ClientPjModelIdClientePj");

                    b.ToTable("DeliverDonationModel");
                });

            modelBuilder.Entity("FoodTech.Models.DonationModel", b =>
                {
                    b.Property<int>("IdDoacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Cep")
                        .HasColumnType("int");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ClientModelIdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("ClientPjModelIdClientePj")
                        .HasColumnType("int");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("FoiPago")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("QuantidadeDoacao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TipoDoacao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UsuarioModelId")
                        .HasColumnType("int");

                    b.HasKey("IdDoacao");

                    b.HasIndex("ClientModelIdCliente");

                    b.HasIndex("ClientPjModelIdClientePj");

                    b.HasIndex("UsuarioModelId");

                    b.ToTable("DonationModel");
                });

            modelBuilder.Entity("FoodTech.Models.UsuarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UsuarioModel");
                });

            modelBuilder.Entity("FoodTech.Models.ClientModel", b =>
                {
                    b.HasOne("FoodTech.Models.UsuarioModel", "UsuarioModel")
                        .WithMany()
                        .HasForeignKey("UsuarioModelId");

                    b.Navigation("UsuarioModel");
                });

            modelBuilder.Entity("FoodTech.Models.ClientPjModel", b =>
                {
                    b.HasOne("FoodTech.Models.UsuarioModel", "UsuarioModel")
                        .WithMany()
                        .HasForeignKey("UsuarioModelId");

                    b.Navigation("UsuarioModel");
                });

            modelBuilder.Entity("FoodTech.Models.DeliverDonationModel", b =>
                {
                    b.HasOne("FoodTech.Models.ClientModel", "ClientModel")
                        .WithMany()
                        .HasForeignKey("ClientModelIdCliente");

                    b.HasOne("FoodTech.Models.ClientPjModel", "ClientPjModel")
                        .WithMany()
                        .HasForeignKey("ClientPjModelIdClientePj");

                    b.Navigation("ClientModel");

                    b.Navigation("ClientPjModel");
                });

            modelBuilder.Entity("FoodTech.Models.DonationModel", b =>
                {
                    b.HasOne("FoodTech.Models.ClientModel", "ClientModel")
                        .WithMany()
                        .HasForeignKey("ClientModelIdCliente");

                    b.HasOne("FoodTech.Models.ClientPjModel", "ClientPjModel")
                        .WithMany()
                        .HasForeignKey("ClientPjModelIdClientePj");

                    b.HasOne("FoodTech.Models.UsuarioModel", "UsuarioModel")
                        .WithMany()
                        .HasForeignKey("UsuarioModelId");

                    b.Navigation("ClientModel");

                    b.Navigation("ClientPjModel");

                    b.Navigation("UsuarioModel");
                });
#pragma warning restore 612, 618
        }
    }
}
